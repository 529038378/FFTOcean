// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> InputTex;
RWTexture2D<float4> OutputTex;
RWTexture2D<float4> LutTex;
int Stage;
int GroupSize;

[numthreads(1024, 1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint2 cor = id;
    cor.x = id.x;
    cor.y = Stage;
    float4 weight = LutTex[cor];
    int reverse = (id.x % GroupSize) >= (GroupSize / 2) ? -1 : 1;
    uint2 pat_cor = cor;
    pat_cor.x += reverse * (GroupSize / 2);
    OutputTex[id.xy] = float4(reverse * weight.x * InputTex[pat_cor].x + InputTex[cor].x, reverse * weight.x * InputTex[pat_cor].x + InputTex[cor].x, reverse * weight.z * InputTex[pat_cor].z + InputTex[cor].z, reverse * weight.z * InputTex[pat_cor].z + InputTex[cor].z);
}
